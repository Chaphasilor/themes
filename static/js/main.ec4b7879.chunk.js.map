{"version":3,"sources":["components/ConsoleTest/ConsoleTest.module.css","components/Home/toolbar.module.css","components/ColourTest/ColourTest.module.css","components/Toast/Toast.module.css","components/Home/Home.module.css","components/Skeleton/Skeleton.module.css","components/Home/content.module.css","components/ThemeSelect/ThemeSelect.module.css","components/Home/homeMethods.ts","utils/setcolours.ts","components/Home/homeState.ts","Icons.tsx","components/Toggle/Toggle.tsx","components/Toggle/Toggles.tsx","components/ColourTest/ColourTest.tsx","components/ConsoleTest/codeblocks.ts","components/Home/consoleMethods.ts","components/ConsoleTest/ConsoleTest.tsx","components/ConsoleTest/methods.tsx","components/ThemeSelect/ThemeSelect.tsx","components/Toast/Toast.tsx","components/Home/Home.tsx","components/Skeleton/Skeleton.tsx","components/More/MoreContent.tsx","App.tsx","serviceWorker.ts","index.tsx","components/More/More.module.css","components/Toggle/Toggle.module.css"],"names":["module","exports","returnInitialTheme","search","length","themeName","URLSearchParams","get","stopSelectDetection","e","themeselectRef","current","document","activeElement","preventDefault","blur","root","documentElement","cssvarDark","cssvarLight","setcolours","type","Object","entries","forEach","key","val","style","setProperty","THEME_COLOUR","initialState","themes","filteredThemes","activeTheme","isSmallScreenSize","window","innerWidth","themeShade","backgroundColour","previewType","message","isActive","title","homeReducer","state","action","immer","draftState","initialTheme","foundTheme","find","theme","name","filter","meta","isDark","background","currentIndex","findIndex","payload","isMoreOpen","Share","props","xmlns","height","size","width","viewBox","aria-labelledby","onClick","className","stroke","colour","backgroundColor","transform","id","d","fill","Copy","Light","outlineColor","Dark","Colours","Console","Arrow","direction","Logo","x2","y2","colours","map","i","originalArr","offset","Math","floor","stopColor","attributeName","values","arr","index","join","slice","dur","repeatCount","Toggle","css","container","option","isSelected","value","currentValue","label","active","htmlFor","checked","onChange","dispatch","radio","outline","icon","shadeValues","getPropertyValue","previewValues","Toggles","backgroundKeys","textKeys","ColourTest","matrix","data-testid","textKey","backgroundKey","y","cell","color","Array","isArray","credits","credit","Fragment","href","link","codeblocks","markup","defaultColour","validKeys","initThemeObj","black","red","green","yellow","blue","purple","cyan","white","brightBlack","brightRed","brightGreen","brightYellow","brightBlue","brightPurple","brightCyan","brightWhite","foreground","selectionBackground","cursorColor","defaultCodeblock","ConsoleTest","useState","tab","setTab","activeCodeblock","codeblock","terminal","light","titlebar","tabs","code","split","string","matches","matchAll","contents","undefined","footer","ThemeSelect","tabIndex","arrow","getComputedStyle","ref","select","target","themeNames","Toast","toastmessages","themename","Home","useRef","useReducer","useEffect","location","resizer","ResizeObserver","contentRect","screenSizeObserver","observe","body","unobserve","shortcutFns","shortcuts","addEventListener","removeEventListener","stringyTheme","JSON","stringify","useMemo","sort","random","sampleColours","parse","toolbar","logo","toggles","content","buttons","button","primary","clipboard","reduce","acc","parseValidKeys","setTimeout","origin","pathname","encodeURIComponent","Skeleton","MoreSection","section","heading","hr","children","MoreContent","role","aria-label","downloadAllThemes","App","setThemes","a","fetch","res","json","then","backupthemes","default","getThemes","themeBlob","Blob","saveAs","autoBom","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iIACAA,EAAOC,QAAU,CAAC,UAAY,+BAA+B,SAAW,8BAA8B,MAAQ,2BAA2B,SAAW,8BAA8B,KAAO,0BAA0B,IAAM,yBAAyB,MAAQ,2BAA2B,OAAS,4BAA4B,KAAO,0BAA0B,OAAS,8B,mBCApWD,EAAOC,QAAU,CAAC,UAAY,2BAA2B,MAAQ,uBAAuB,QAAU,2B,mBCAlGD,EAAOC,QAAU,CAAC,OAAS,2BAA2B,KAAO,yBAAyB,QAAU,8B,mBCAhGD,EAAOC,QAAU,CAAC,UAAY,yBAAyB,OAAS,sBAAsB,MAAQ,uB,mBCA9FD,EAAOC,QAAU,CAAC,UAAY,wBAAwB,QAAU,sBAAsB,QAAU,sBAAsB,MAAQ,oBAAoB,MAAQ,oBAAoB,KAAO,mBAAmB,QAAU,sBAAsB,QAAU,sBAAsB,KAAO,mBAAmB,IAAM,kBAAkB,SAAW,yB,mBCArUD,EAAOC,QAAU,CAAC,UAAY,4BAA4B,KAAO,yB,kBCAjED,EAAOC,QAAU,CAAC,UAAY,2BAA2B,QAAU,yBAAyB,QAAU,yBAAyB,OAAS,wBAAwB,QAAU,yBAAyB,QAAU,yBAAyB,OAAS,0B,2ECA/OD,EAAOC,QAAU,CAAC,UAAY,+BAA+B,MAAQ,2BAA2B,OAAS,4BAA4B,MAAQ,2BAA2B,UAAY,iC,2JCYvKC,EAAqB,SAACC,GACjC,GAAIA,EAAOC,OAAS,EAAG,CACrB,IACMC,EADS,IAAIC,gBAAgBH,GACVI,IAAI,SAC7B,GAAiB,MAAbF,EACF,OAAOA,EAGX,OAAO,MAgBHG,EAAsB,SAC1BC,EACAC,GAG4B,MAA1BA,EAAeC,SACfC,SAASC,gBAAkBH,EAAeC,UAI1CF,EAAEK,iBACFJ,EAAeC,QAAQI,S,QC9CrBC,G,MAAOJ,SAASK,iBAqBhBC,EAAyB,CAC7B,gBAAiB,oDACjB,mBAAoB,sCACpB,gBAAiB,UACjB,uBAAwB,iDACxB,kBAAmB,UACnB,+BAAgC,2BAChC,gBAAiB,8CACjB,wBAAyB,+CACzB,wBAAyB,UACzB,gCAAiC,6CACjC,mBAAoB,UACpB,wBAAyB,UACzB,gBAAiB,UACjB,yBAA0B,UAC1B,uBAAwB,sBACxB,2BAA4B,QAGxBC,EAA0B,CAC9B,gBAAiB,iDACjB,mBAAoB,kCACpB,gBAAiB,UACjB,uBAAwB,iDACxB,kBAAmB,UACnB,+BAAgC,uBAChC,gBAAiB,2CACjB,wBAAyB,+CACzB,gCAAiC,6CACjC,wBAAyB,UACzB,mBAAoB,UACpB,wBAAyB,UACzB,gBAAiB,UACjB,yBAA0B,UAC1B,uBAAwB,4BACxB,2BAA4B,QAWfC,EARI,SAACC,GAClBC,OAAOC,QAAiB,UAATF,EAAmBF,EAAcD,GAAYM,SAC1D,YAAiB,IAAD,mBAAdC,EAAc,KAATC,EAAS,KACdV,EAAKW,MAAMC,YAAYH,EAAKC,OCVrBG,EACJ,QADIA,EAEL,OAIKC,EAA0B,CACrCC,OAAQ,GACRC,eAAgB,GAChBC,YAAa,GACbC,kBAAmBC,OAAOC,WAAa,IACvCC,WAAYR,EACZS,iBAAkB,UAClBC,YAAa,UACbC,QAAS,CACPC,UAAU,EACVC,MAAO,QACPF,QAAS,wCAIAG,EAAc,SACzBC,EACAC,GAEA,OAAOC,YAAMF,GAAO,SAACG,GACnB,OAAQF,EAAOxB,MACb,IAAK,OAEH,GADA0B,EAAWhB,OAASc,EAAOd,OACA,MAAvBc,EAAOG,aAAsB,CAC/B,IAAMC,EAAaJ,EAAOd,OAAOmB,MAC/B,SAACC,GAAD,OAAsBA,EAAMC,OAASP,EAAOG,gBAE5B,MAAdC,IACFF,EAAWf,eAAiBa,EAAOd,OAAOsB,QACxC,SAACF,GAAD,OAAsBA,EAAMG,KAAKC,SAAWN,EAAWK,KAAKC,UAE9DR,EAAWd,YAAcgB,EAAWG,KACpCL,EAAWV,WAAaY,EAAWK,KAAKC,OAAS,OAAS,QAC1DR,EAAWT,iBAAmBW,EAAWO,iBAI3CT,EAAWf,eAAiBa,EAAOd,OAAOsB,QACxC,SAACF,GAAD,OAAsBA,EAAMG,KAAKC,UAEnCR,EAAWd,YAAcc,EAAWf,eAAe,GAAGoB,KAExDhC,EAAW2B,EAAWV,YACtB,MACF,IAAK,MAEDU,EAAWd,YAAcY,EAAOM,MAEhC,IAAMA,EAAQP,EAAMb,OAAOmB,MACzB,SAACC,GAAD,OAAWA,EAAMC,OAASP,EAAOM,SAE/BA,IACFJ,EAAWT,iBAAmBa,EAAMK,YAGxC,MACF,IAAK,OACH,IAGIL,EAHEM,EAAeb,EAAMZ,eAAe0B,WACxC,SAACP,GAAD,OAAWA,EAAMC,OAASR,EAAMX,eAKhCkB,EAFmB,IAAjBM,EAEMb,EAAMZ,eAAeY,EAAMZ,eAAe5B,OAAS,GAEnDwC,EAAMZ,eAAeyB,EAAe,GAE9CV,EAAWd,YAAckB,EAAMC,KAC/BL,EAAWT,iBAAmBa,EAAMK,WACpC,MAEF,IAAK,OAED,IAAIL,EACEM,EAAeb,EAAMZ,eAAe0B,WACxC,SAACP,GAAD,OAAWA,EAAMC,OAASR,EAAMX,eAIhCkB,EAFEM,IAAiBb,EAAMZ,eAAe5B,OAAS,EAEzCwC,EAAMZ,eAAe,GAErBY,EAAMZ,eAAeyB,EAAe,GAE9CV,EAAWd,YAAckB,EAAMC,KAC/BL,EAAWT,iBAAmBa,EAAMK,WAEtC,MACF,IAAK,OACHT,EAAWb,kBAAoBW,EAAOX,kBACtC,MACF,IAAK,QACHa,EAAWV,WAAaQ,EAAOc,QAC3BZ,EAAWV,aAAeR,IAC5BkB,EAAWf,eAAiBY,EAAMb,OAAOsB,QACvC,SAACF,GAAD,OAAWA,EAAMG,KAAKC,WAGtBR,EAAWV,aAAeR,IAC5BkB,EAAWf,eAAiBY,EAAMb,OAAOsB,QACvC,SAACF,GAAD,OAAYA,EAAMG,KAAKC,WAG3BnC,EAAW2B,EAAWV,YACtBU,EAAWd,YAAcc,EAAWf,eAAe,GAAGoB,KAEtD,IAAMD,EAAQP,EAAMb,OAAOmB,MACzB,SAACC,GAAD,OAAWA,EAAMC,OAASL,EAAWf,eAAe,GAAGoB,QAErDD,IACFJ,EAAWT,iBAAmBa,EAAMK,YAEtC,MACF,IAAK,UACHT,EAAWR,YAAcM,EAAOc,QAChC,MACF,IAAK,OACHZ,EAAWa,YAAchB,EAAMgB,WAC/B,MACF,IAAK,OACHb,EAAWP,QAAQE,MAAQG,EAAOH,MAClCK,EAAWP,QAAQA,QAAUK,EAAOL,QACpCO,EAAWP,QAAQC,UAAW,EAC9B,MACF,IAAK,OACHM,EAAWP,QAAQC,UAAW,O,OC7KzBoB,EAAQ,SAACC,GAAD,OACnB,yBACEC,MAAM,6BACNC,OAAQF,EAAMG,MAAQ,OACtBC,MAAOJ,EAAMG,MAAQ,OACrBE,QAAQ,YACRC,kBAAgB,QAChBC,QAASP,EAAMO,QACfC,UAAWR,EAAMQ,UACjB3C,MAAO,CACL4C,OAAQT,EAAMU,OACdC,gBAAiBX,EAAMxB,iBACvBoC,UAAW,eAGb,2BAAOC,GAAG,SAAV,eACA,0BACEC,EAAE,2DACFC,KAAMf,EAAMU,WAKLM,EAAO,SAAChB,GAAD,OAClB,yBACEC,MAAM,6BACNC,OAAQF,EAAMG,MAAQ,OACtBC,MAAOJ,EAAMG,MAAQ,OACrBE,QAAQ,YACRC,kBAAgB,OAChBC,QAASP,EAAMO,QACfC,UAAWR,EAAMQ,UACjB3C,MAAO,CACL4C,OAAQT,EAAMU,OACdC,gBAAiBX,EAAMxB,mBAGzB,2BAAOqC,GAAG,QAAV,cACA,0BACEE,KAAMf,EAAMU,OACZI,EAAE,+IAuBKG,EAAQ,SAACjB,GAAD,OACnB,yBACEC,MAAM,6BACNC,OAAQF,EAAMG,MAAQ,OACtBC,MAAOJ,EAAMG,MAAQ,OACrBE,QAAQ,YACRC,kBAAgB,eAChBC,QAASP,EAAMO,QACfC,UAAWR,EAAMQ,UACjB3C,MAAO,CACL4C,OAAQT,EAAMU,OACdQ,aAAclB,EAAMU,SAGtB,2BAAOG,GAAG,gBAAV,uBACA,0BACEC,EAAE,wKACFC,KAAMf,EAAMU,WAKLS,EAAO,SAACnB,GAAD,OAClB,yBACEC,MAAM,6BACNC,OAAQF,EAAMG,MAAQ,OACtBC,MAAOJ,EAAMG,MAAQ,OACrBE,QAAQ,YACRC,kBAAgB,cAChBC,QAASP,EAAMO,QACfC,UAAWR,EAAMQ,UACjB3C,MAAO,CACL4C,OAAQT,EAAMU,OACdQ,aAAclB,EAAMU,SAGtB,2BAAOG,GAAG,eAAV,sBACA,0BACEC,EAAE,kIACFC,KAAMf,EAAMU,WAKLU,EAAU,SAACpB,GAAD,OACrB,yBACEC,MAAM,6BACNC,OAAQF,EAAMG,MAAQ,OACtBC,MAAOJ,EAAMG,MAAQ,OACrBE,QAAQ,YACRC,kBAAgB,kBAChBC,QAASP,EAAMO,QACfC,UAAWR,EAAMQ,UACjB3C,MAAO,CACL4C,OAAQT,EAAMU,OACdQ,aAAclB,EAAMU,SAGtB,2BAAOG,GAAG,mBAAV,+BACA,0BACEC,EAAE,ucACFC,KAAMf,EAAMU,WAKLW,EAAU,SAACrB,GAAD,OACrB,yBACEC,MAAM,6BACNC,OAAQF,EAAMG,MAAQ,OACtBC,MAAOJ,EAAMG,MAAQ,OACrBE,QAAQ,YACRC,kBAAgB,oBAChBC,QAASP,EAAMO,QACfC,UAAWR,EAAMQ,UACjB3C,MAAO,CACL4C,OAAQT,EAAMU,OACdQ,aAAclB,EAAMU,SAGtB,2BAAOG,GAAG,qBAAV,4BACA,0BACEC,EAAE,6FACFC,KAAMf,EAAMU,WA+CLY,EAAQ,SAACtB,GAAD,OACnB,yBACEC,MAAM,6BACNC,OAAQF,EAAMG,MAAQ,OACtBC,MAAOJ,EAAMG,MAAQ,OACrBE,QAAQ,YACRC,kBAAqC,UAApBN,EAAMuB,UAAwB,cAAgB,aAC/DhB,QAASP,EAAMO,QACfC,UAAWR,EAAMQ,UACjB3C,MAAO,CACLqD,aAAclB,EAAMU,OACpBE,UAA+B,UAApBZ,EAAMuB,UAAwB,aAAe,KAGrC,UAApBvB,EAAMuB,UACL,2BAAOV,GAAG,eAAe,mBAEzB,2BAAOA,GAAG,cAAc,uBAE1B,0BAAMC,EAAE,gBAAgBC,KAAK,SAC7B,0BACED,EAAE,+DACFC,KAAMf,EAAMU,WAkBLc,EAAO,SAACxB,GAAD,OAClB,yBACEC,MAAM,6BACNC,OAAQF,EAAMG,MAAQ,OACtBC,MAAOJ,EAAMG,MAAQ,OACrBE,QAAQ,cACRC,kBAAgB,OAChBC,QAASP,EAAMO,QACfC,UAAWR,EAAMQ,UACjB3C,MAAO,CACLqD,aAAclB,EAAMU,SAGtB,8BACE,oCAAgBG,GAAG,gBAAgBY,GAAG,OAAOC,GAAG,KAC7C1B,EAAM2B,QAAQC,KACb,SAAClB,EAAgBmB,EAAGC,GAApB,OACE,0BACEnE,IAAKkE,EACLE,OAAM,UAAKC,KAAKC,MAAOJ,GAAKC,EAAYxF,OAAS,GAAM,KAAjD,KACN4F,UAAWxB,GAEX,6BACEyB,cAAc,aACdC,QArCQC,EAqCeP,EArCAQ,EAqCaT,EApCpC,IAAVS,EACK,sBAAID,GAAJ,CAASA,EAAI,KAAIE,KAAK,KAExB,sBAAIF,EAAIG,MAAMF,IAAd,YAAyBD,EAAIG,MAAM,EAAGF,EAAQ,IAA9C,CAAkDD,EAAIC,KAAQC,KACnE,MAiCYE,IAAI,KACJC,YAAY,gBAvCL,IAACL,EAAeC,OA8CnC,2BAAOzB,GAAG,QAAV,QACA,0BACEE,KAAK,sBACLD,EAAE,oRAEJ,0BACEC,KAAK,sBACLD,EAAE,m4B,gBC1OO6B,EAlCsB,SAAC3C,GAAD,OACnC,6BAASQ,UAAWoC,IAAIC,WACrB7C,EAAMoC,OAAOR,KAAI,SAACkB,GACjB,IAAMC,EAAaD,EAAOE,QAAUhD,EAAMiD,aAC1C,OACE,2BACEtF,IAAKmF,EAAOE,MACZxC,UAAS,UAAKoC,IAAIM,MAAT,YAAkBH,EAAaH,IAAIO,OAAS,IACrDC,QAASN,EAAOE,OAEhB,2BACE1D,KAAMU,EAAMzC,KACZA,KAAK,QACLsD,GAAIiC,EAAOE,MACXA,MAAOF,EAAOE,MACdK,QAASN,EACTO,SAAU,WACRtD,EAAMuD,SAAS,CACbhG,KAAMyC,EAAMzC,KACZsC,QAASiD,EAAOE,SAGpBxC,UAAWoC,IAAIY,QAEjB,yBAAKhD,UAAWoC,IAAIa,SACjBX,EAAOY,KAAKX,GACZD,EAAOI,aCnCdS,EAAc,CAClB,CACEX,MAAO,OACPE,MAAO,OAEPQ,KAAM,kBACJ,kBAAC,EAAD,CACEvD,KAAK,OACLO,OAAQ5D,SAASK,gBAAgBU,MAAM+F,iBACrC,wBAKR,CACEZ,MAAO,QACPE,MAAO,QAEPQ,KAAM,kBACJ,kBAAC,EAAD,CACEvD,KAAK,OACLO,OAAQ5D,SAASK,gBAAgBU,MAAM+F,iBACrC,yBAOJC,EAAgB,CACpB,CACEb,MAAO,UACPE,MAAO,WAEPQ,KAAM,kBACJ,kBAAC,EAAD,CACEvD,KAAK,OACLO,OAAQ5D,SAASK,gBAAgBU,MAAM+F,iBACrC,wBAKR,CACEZ,MAAO,SACPE,MAAO,UAEPQ,KAAM,kBACJ,kBAAC,EAAD,CACEvD,KAAK,OACLO,OAAQ5D,SAASK,gBAAgBU,MAAM+F,iBACrC,yBA8BKE,EAjBC,SAAC9D,GAAD,OACd,oCACE,kBAAC,EAAD,CACEiD,aAAcjD,EAAMzB,WACpBgF,SAAUvD,EAAMuD,SAChBhG,KAAK,QACL6E,OAAQuB,IAEV,kBAAC,EAAD,CACEV,aAAcjD,EAAMvB,YACpB8E,SAAUvD,EAAMuD,SAChBhG,KAAK,UACL6E,OAAQyB,M,iBC9EDE,EAAsC,CACjD,aACA,QACA,MACA,QACA,SACA,OACA,SACA,OACA,QACA,cAGWC,EAA0B,CACrC,QACA,cACA,MACA,YACA,QACA,cACA,SACA,eACA,OACA,aACA,SACA,eACA,OACA,aACA,QACA,eA2CaC,EApCyB,SAACjE,GACvC,OACE,oCACE,6BAASQ,UAAWoC,IAAIsB,OAAQC,cAAY,cACzCH,EAASpC,KAAI,SAACwC,EAASvC,GAAV,OACZkC,EAAenC,KAAI,SAACyC,EAAeC,GAAhB,OACjB,yBACE3G,IAAKkE,EAAI,IAAMyC,EACf9D,UAAWoC,IAAI2B,KACf1G,MAAO,CACL6B,WAAYM,EAAMX,MAAQW,EAAMX,MAAMgF,GAAiB,GACvDG,MAAOxE,EAAMX,MAAQW,EAAMX,MAAM+E,GAAW,KALhD,cAaLK,MAAMC,QAAQ1E,EAAMX,MAAMG,KAAKmF,UAC9B,yBAAKnE,UAAWoC,IAAI+B,QAASR,cAAY,UAAzC,WACWnE,EAAMX,MAAMC,KADvB,IAC8B,KAC3BU,EAAMX,MAAMG,KAAKmF,QAAQ/C,KAAI,SAACgD,EAAQ/C,GAAT,OAC5B,kBAAC,IAAMgD,SAAP,CAAgBlH,IAAKkE,GAClBA,EAAI,GAAK,mCACV,uBAAGlE,IAAKkE,EAAGiD,KAAMF,EAAOG,MACrBH,EAAOtF,a,gBC0BT0F,EApFsB,CACnC,CACEnE,GAAI,eACJvB,KAAM,iBACN2F,OAAO,qXAUPC,cAAe,cAEjB,CACErE,GAAI,cACJvB,KAAM,gBACN2F,OAAO,w2CAcPC,cAAe,eAEjB,CACErE,GAAI,cACJvB,KAAM,gBACN2F,OAAO,06CA0BPC,cAAe,SAEjB,CACErE,GAAI,gBACJvB,KAAM,iBACN2F,OAAO,meAWPC,cAAe,e,QCvFNC,EAA2B,CACtC,OACA,QACA,MACA,QACA,SACA,OACA,SACA,OACA,QACA,cACA,YACA,cACA,eACA,aACA,eACA,aACA,cACA,aACA,aACA,sBACA,eAIIC,EAAe,CACnB9F,KAAM,GACN+F,MAAO,GACPC,IAAK,GACLC,MAAO,GACPC,OAAQ,GACRC,KAAM,GACNC,OAAQ,GACRC,KAAM,GACNC,MAAO,GACPC,YAAa,GACbC,UAAW,GACXC,YAAa,GACbC,aAAc,GACdC,WAAY,GACZC,aAAc,GACdC,WAAY,GACZC,YAAa,GACb1G,WAAY,GACZ2G,WAAY,GACZC,oBAAqB,GACrBC,YAAa,ICrCTC,EAAmC,CACvCtB,cAAe,aACfD,OAAQ,GACRpE,GAAI,UACJvB,KAAM,WAoEOmH,GAjE0B,SAACzG,GAAW,IAAD,ECZlDX,EDYkD,EAC5BqH,mBAAS1B,EAAW,GAAGnE,IADK,mBAC3C8F,EAD2C,KACtCC,EADsC,KAE5CC,EAAe,UACnB7B,EAAW5F,MAAK,SAAC0H,GAAD,OAAeA,EAAUjG,KAAO8F,YAD7B,QACqCH,EAC1D,OACE,6BAAShG,UAAWoC,IAAIC,UAAWsB,cAAY,eAC7C,yBACE3D,UAAS,UAAKoC,IAAImE,SAAT,aACN/G,EAAMX,MAAMG,KAAKC,OAAqB,GAAZmD,IAAIoE,QAGjC,yBAAKxG,UAAWoC,IAAIqE,UAClB,yBAAKzG,UAAWoC,IAAIsE,MACjBlC,EAAWpD,KAAI,SAACkF,GAAD,OACd,yBACEnJ,IAAKmJ,EAAUjG,GACfL,UAAS,UAAKoC,IAAI+D,IAAT,YACPA,IAAQG,EAAUjG,GAAK+B,IAAIO,OAAS,KAGtC,2BACE3C,UAAWoC,IAAIY,MACf3C,GAAIiG,EAAUjG,GACdvB,KAAK,MACL/B,KAAK,QACLyF,MAAO8D,EAAUjG,GACjBwC,QAASyD,EAAUjG,KAAOgG,EAAgBhG,GAC1CyC,SAAU,WACRsD,EAAOE,EAAUjG,OAGrB,2BAAOuC,QAAS0D,EAAUjG,IACxB,8BAAOiG,EAAUxH,aAM3B,0BACE6E,cAAY,SACZ3D,UAAWoC,IAAIuE,KACftJ,MAAO,CACL2G,MAAOxE,EAAMX,OAAOW,EAAMX,MAAOwH,EAAgB3B,mBCtD3D7F,EDyDqBW,EAAMX,MAAOwH,EAAgB5B,OCpDpCmC,MAAM,6BAA6BxF,KAAI,SAACyF,EAAQxF,GAC5D,IAAMyF,EAAU,YAAID,EAAOE,SAAS,yBAAyB,GAC7D,GAAe,MAAXD,EAAiB,CAMnB,IAAM3F,EAAU2F,EAAQ,GAAGF,MAAM,KAG3Bf,EACW,SAAf1E,EAAQ,GAAgB,aAAgBA,EAAQ,GAC5CjC,EACJiC,EAAQrF,OAAS,EAAKqF,EAAQ,GAAqB,KAU/C6F,EAAWF,EAAQ,GACzB,OACE,0BACE3J,IAAKkE,EACLhE,MAAO,CACL2G,MAAOnF,EAAMgH,GACb3G,WAAYA,EAAaL,EAAMK,QAAc+H,IAG9CD,GAUP,OAAOH,IACN,MDUI5C,MAAMC,QAAQ1E,EAAMX,MAAMG,KAAKmF,UAC9B,yBAAKnE,UAAWoC,IAAI8E,OAAQvD,cAAY,UAAxC,WACWnE,EAAMX,MAAMC,KADvB,IAC8B,KAC3BU,EAAMX,MAAMG,KAAKmF,QAAQ/C,KAAI,SAACgD,EAAQ/C,GAAT,OAC5B,kBAAC,IAAMgD,SAAP,CAAgBlH,IAAKkE,GAClBA,EAAI,GAAK,mCACV,uBAAGlE,IAAKkE,EAAGiD,KAAMF,EAAOG,MACrBH,EAAOtF,c,mBEcXqI,GAlE0B,SAAC3H,GACxC,OACE,yBAAKQ,UAAWoC,KAAIC,WAClB,4BACE+E,UAAW,EACXpH,UAAWoC,KAAIrB,UACfhB,QAAS,WACPP,EAAMuD,SAAS,CAAChG,KAAM,WAGxB,kBAAC,EAAD,CACEiD,UAAWoC,KAAIiF,MACfnH,OAAQoH,iBAAiBhL,SAASK,iBAAiByG,iBACjD,iBAEFzD,KAAK,SAZT,QAgBA,2BAAOK,UAAWoC,KAAIM,MAAOE,QAAQ,gBACnC,0BAAM5C,UAAU,oBAAhB,gBACA,4BACE2D,cAAY,aACZ4D,IAAK/H,EAAMpD,eACXiE,GAAG,eACHL,UAAWoC,KAAIoF,OACfhF,MAAOhD,EAAM7B,YACbmF,SAAU,SAAC3G,GACTA,EAAEK,iBACEL,EAAEsL,QACJjI,EAAMuD,SAAS,CAAChG,KAAM,MAAO8B,MAAO1C,EAAEsL,OAAOjF,UAIhDhD,EAAMkI,WAAWtG,KAAI,SAACrF,GAAD,OACpB,4BACE4H,cAAY,eACZnB,MAAOzG,EACPoB,IAAKpB,GAEJA,QAKT,4BACEqL,UAAW,EACXpH,UAAWoC,KAAIrB,UACfhB,QAAS,WACPP,EAAMuD,SAAS,CAAChG,KAAM,WAJ1B,OAQE,kBAAC,EAAD,CACEiD,UAAWoC,KAAIiF,MACftG,UAAU,QACVpB,KAAK,OACLO,OAAQoH,iBAAiBhL,SAASK,iBAAiByG,iBACjD,sB,oBC9DGuE,GAND,SAACnI,GAAD,OACZ,6BAASQ,UAAS,UAAKoC,KAAIC,UAAT,YAAsB7C,EAAMrB,SAAWiE,KAAIO,OAAS,KACpE,yBAAK3C,UAAWoC,KAAIhE,OAAQoB,EAAMtB,W,2DCehC0J,GACG,SAACC,GAAD,gBAA0BA,EAA1B,+BADHD,GAEE,SAACC,GAAD,gBAA0BA,EAA1B,mCAoJOC,GAjJoB,SAACtI,GAClC,IAAMpD,EAAiB2L,iBAAO,MADc,EAElBC,qBAAW3J,EAAD,YAAC,eAChCb,GACA,CAACI,kBAAmBC,OAAOC,WAAa,QAJD,mBAErCQ,EAFqC,KAE9ByE,EAF8B,KAM5CkF,qBAAU,WACRlF,EAAS,CACPhG,KAAM,OACNU,OAAQ+B,EAAM/B,OACdiB,aAAc9C,EAAmBiC,OAAOqK,SAASrM,UAEnD,IAAMsM,EbpBwB,SAChCpF,GAEA,OAAO,IAAIqF,KAAe,SAACnL,GAAoC,IACtD2C,EAAS3C,EAAQ,GAAGoL,YAApBzI,MACHA,GAAS,KACXmD,EAAS,CAAChG,KAAM,OAAQa,mBAAmB,IAClCgC,EAAQ,MACjBmD,EAAS,CAAChG,KAAM,OAAQa,mBAAmB,OaY7B0K,CAAmBvF,GAEnC,OADAoF,EAAQI,QAAQjM,SAASkM,MAClB,WACLL,EAAQM,UAAUnM,SAASkM,SAE5B,CAAChJ,EAAM/B,SACVwK,qBAAU,WACR,IAAMS,EbCe,SACvB3F,EACA3G,GAFuB,OAGpB,SAACD,GACW,SAAXA,EAAEwK,OACJzK,EAAoBC,EAAGC,GACvB2G,EAAS,CACPhG,KAAM,UAGK,SAAXZ,EAAEwK,OACJzK,EAAoBC,EAAGC,GACvB2G,EAAS,CACPhG,KAAM,WadY4L,CAAU5F,EAAU3G,GAExC,OADAE,SAASsM,iBAAiB,WAAYF,GAC/B,WACLpM,SAASuM,oBAAoB,WAAYH,MAE1C,IACH,IAAM7J,EAAQP,EAAMb,OAAOmB,MAAK,SAACC,GAAD,OAAWA,EAAMC,OAASR,EAAMX,eAC1D+J,EAAapJ,EAAMZ,eAAe0D,KAAI,SAACvC,GAAD,OAAWA,EAAMC,QAEvDgK,EAAwB,MAATjK,EAAgBkK,KAAKC,UAAUnK,GAAS,KACvDsC,EAAU8H,mBAAQ,WAGtB,ObMyB,SAACpK,GAC5B,OAAIA,EACK,CACLA,EAAMiG,IACNjG,EAAMkG,MACNlG,EAAMmG,OACNnG,EAAMoG,KACNpG,EAAMqG,OACNrG,EAAMsG,MAEL+D,MAAK,kBAAM1H,KAAK2H,SAAW,MAC3BnH,MAAM,GAEJ,GanBEoH,CACW,MAAhBN,EAAuBC,KAAKM,MAAMP,GAAgB,QAEnD,CAACA,IA+BJ,OACE,6BACE9I,UAAWoC,KAAIC,UACfhF,MAAO,CAAC6B,WAAYZ,EAAMN,mBAE1B,6BAASgC,UAAWsJ,KAAQjH,WAC1B,uBAAGiC,KAAK,IAAItE,UAAWsJ,KAAQlL,OAC7B,kBAAC,EAAD,CAAMuB,KAAK,OAAOwB,QAASA,EAASnB,UAAWsJ,KAAQC,OACvD,yDAEAjL,EAAMV,mBACN,yBAAKoC,UAAWsJ,KAAQE,SACtB,kBAAC,EAAD,CACEzL,WAAYO,EAAMP,WAClBE,YAAaK,EAAML,YACnB8E,SAAUA,MAMlB,6BAAS/C,UAAWoC,KAAIqH,SACtB,6BAASzJ,UAAWyJ,KAAQpH,WACzB/D,EAAMV,mBACL,yBAAKoC,UAAWyJ,KAAQD,SACtB,kBAAC,EAAD,CACEzL,WAAYO,EAAMP,WAClBE,YAAaK,EAAML,YACnB8E,SAAUA,KAIN,MAATlE,IACwB,WAAtBP,EAAML,YACL,kBAAC,EAAD,CAAYY,MAAOA,IAEnB,kBAAC,GAAD,CAAaA,MAAOA,KAExB,kBAAC,GAAD,CACE6I,WAAYA,EACZ3E,SAAUA,EACVpF,YAAaW,EAAMX,YACnBvB,eAAgBA,IAElB,yBAAK4D,UAAWyJ,KAAQC,SACtB,4BACE/F,cAAY,aACZ3D,UAAS,UAAKyJ,KAAQE,OAAb,YAAuBF,KAAQG,SACxC7J,QA9EO,YACZzB,EAAMJ,QAAQC,UAAYU,IAC7BkE,EAAS,CACPhG,KAAM,OACNqB,MAAO,UACPF,QAAS0J,GAAmB/I,EAAMC,QAEpC+K,IAAoBd,KAAKC,ULxBD,SAACnK,GAC7B,OAAO8F,EAAUmF,QACf,SAACC,EAAK5M,GAAN,mBAAC,eACI4M,GADL,eAGK5M,EAAM0B,EAAM1B,OAGjByH,GKgBqCoF,CAAenL,GAAQ,KAAM,IAChEoL,YAAW,WACTlH,EAAS,CAAChG,KAAM,WACf,QAsEK,kBAAC,EAAD,CAAMiD,UAAWyJ,KAAQvG,KAAMhD,OAAO,YALxC,aAQA,4BACEyD,cAAY,cACZ3D,UAAWyJ,KAAQE,OACnB5J,QAzEQ,YACbzB,EAAMJ,QAAQC,UAAYU,IAC7BkE,EAAS,CACPhG,KAAM,OACNqB,MAAO,UACPF,QAAS0J,GAAoB/I,EAAMC,QAErC+K,IAAA,UACKhM,OAAOqK,SAASgC,QADrB,OAEIrM,OAAOqK,SAASiC,SAFpB,kBAGYC,mBAAmBvL,EAAMC,QAErCmL,YAAW,WACTlH,EAAS,CAAChG,KAAM,WACf,QA6DK,kBAAC,EAAD,CACEiD,UAAWyJ,KAAQvG,KACnBhD,OAAQoH,iBACNhL,SAASK,iBACTyG,iBAAiB,mBATvB,gBAcF,kBAAC,GAAD,CACElE,WAAYM,EAAMxB,iBAClBI,MAAOE,EAAMJ,QAAQE,MACrBD,SAAUG,EAAMJ,QAAQC,SACxBD,QAASI,EAAMJ,QAAQA,c,oBCrJpBmM,GAdE,kBACf,6BAASrK,UAAWoC,KAAIC,WACtB,4BACE,kBAAC,EAAD,CACE1C,KAAK,OACLwB,QAAS,CAAC,UAAW,UAAW,WAChCnB,UAAWoC,KAAImH,OAJnB,2BAQA,4C,mBCREe,GAA0C,SAAC9K,GAC/C,OACE,yBAAKQ,UAAWoC,KAAImI,SAClB,yBAAKvK,UAAWoC,KAAIoI,SAAUhL,EAAMgL,SACpC,wBAAIxK,UAAWoC,KAAIqI,KAClBjL,EAAMkL,WAkGEC,GAzFK,SAACnL,GAAD,OAClB,6BAASmE,cAAY,cAAc3D,UAAWoC,KAAIC,UAAWhC,GAAG,QAC9D,kBAAC,GAAD,CAAamK,QAAQ,YACnB,0GAES,IACP,0BAAMI,KAAK,MAAMC,aAAW,oBAA5B,mCAIF,4BAAQ9K,QAASP,EAAMsL,mBAAvB,6BAIF,kBAAC,GAAD,CAAaN,QAAQ,QACnB,+DACoC,IAClC,uBAAGlG,KAAK,4DAAR,6BAFF,KAOA,0CACe,IACb,uBAAGA,KAAK,wFAAR,2CAFF,MAQF,kBAAC,GAAD,CAAakG,QAAQ,UACnB,mDACwB,IACtB,uBAAGlG,KAAK,qDAAR,wBAFF,6BAOA,6FACkE,IAChE,uBAAGA,KAAK,8CAAR,qBAFF,MAQF,kBAAC,GAAD,CAAakG,QAAQ,cACnB,kGACuE,KAEvE,4BACE,6CACiB,IACf,uBAAGlG,KAAK,gEAAR,wBAEK,IAJP,oDAOA,4EACqD,IACnD,uBAAGA,KAAK,yDAAR,8BAMN,kBAAC,GAAD,CAAakG,QAAQ,UACnB,gEACqC,IACnC,uBAAGlG,KAAK,sCAAR,2BAAyE,IAF3E,0BAMF,kBAAC,GAAD,CAAakG,QAAQ,QACnB,8DACkC,0BAAMxK,UAAWoC,KAAIjF,KAArB,KADlC,wBAEkB,0BAAM6C,UAAWoC,KAAIjF,KAArB,KAFlB,oBAIA,sEAC2C,IACzC,uBAAGmH,KAAK,6CAAR,gDAFF,QCpCSyG,GA/CO,WAAO,IAAD,EACE7E,mBAAsB,IADxB,mBACnBzI,EADmB,KACXuN,EADW,KAE1B/C,qBAAU,YACO,uCAAG,8BAAAgD,EAAA,+EAEIC,MAAM,GAAD,OAPiB,2BAOjB,mBAFT,cAERC,EAFQ,gBAGOA,EAAIC,OAHX,OAGR3N,EAHQ,OAIduN,EAAUvN,GAJI,kDAOd,iCAA4B4N,MAAK,SAACC,GAChCN,EAAUM,EAAaC,YARX,0DAAH,qDAYfC,KACC,IAoBH,OAAI/N,EAAO3B,OAAS,EACX,kBAAC,GAAD,MAGP,oCACE,kBAAC,GAAD,CAAM2B,OAAQA,IACd,kBAAC,GAAD,CAAaqN,kBAzBS,WACxB,IAAMW,EAAY,IAAIC,KACpB,CACE3C,KAAKC,UACHvL,EAAO2D,KAAI,SAACvC,GAEcA,EAAjBG,KACP,OAHoB,YAEIH,EAFJ,aAKtB,KACA,IAGJ,CACE9B,KAAM,qBAGV4O,iBAAOF,EAAW,+BAAgC,CAACG,SAAS,SCvC5CC,QACW,cAA7BhO,OAAOqK,SAAS4D,UAEe,UAA7BjO,OAAOqK,SAAS4D,UAEhBjO,OAAOqK,SAAS4D,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,GAAD,MAAS3P,SAAS4P,eAAe,SD0I3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhB,MAAK,SAACiB,GAClCA,EAAaC,iB,kBEjJnB7Q,EAAOC,QAAU,CAAC,UAAY,wBAAwB,GAAK,iBAAiB,QAAU,sBAAsB,QAAU,sBAAsB,IAAM,oB,kBCAlJD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,MAAQ,sBAAsB,OAAS,uBAAuB,MAAQ,sBAAsB,QAAU,2B","file":"static/js/main.ec4b7879.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ConsoleTest_container__xPJd9\",\"terminal\":\"ConsoleTest_terminal__WHzsX\",\"light\":\"ConsoleTest_light__7fhT-\",\"titlebar\":\"ConsoleTest_titlebar__3rT1E\",\"tabs\":\"ConsoleTest_tabs__2pKB7\",\"tab\":\"ConsoleTest_tab__AkTaj\",\"radio\":\"ConsoleTest_radio__2WhHB\",\"active\":\"ConsoleTest_active__XtGdk\",\"code\":\"ConsoleTest_code__39eEx\",\"footer\":\"ConsoleTest_footer__1rMBF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"toolbar_container__qvx_U\",\"title\":\"toolbar_title__2H4C9\",\"toggles\":\"toolbar_toggles__1G1Hf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"matrix\":\"ColourTest_matrix__F0HjV\",\"cell\":\"ColourTest_cell__20yhV\",\"credits\":\"ColourTest_credits__-zYbL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Toast_container__1J5KY\",\"active\":\"Toast_active__2tk5g\",\"title\":\"Toast_title__3tgaR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Home_container__1GjCc\",\"sidebar\":\"Home_sidebar__nbUf_\",\"content\":\"Home_content__1Mx1c\",\"title\":\"Home_title__3pCQy\",\"light\":\"Home_light__34rtq\",\"dark\":\"Home_dark__1Clm1\",\"actions\":\"Home_actions__2ne28\",\"buttons\":\"Home_buttons__2UQms\",\"help\":\"Home_help__1KY-J\",\"git\":\"Home_git__25kkv\",\"download\":\"Home_download__3z9fY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Skeleton_container__rG00n\",\"logo\":\"Skeleton_logo__18o8T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"content_container__-TgiN\",\"loading\":\"content_loading__3cUAw\",\"buttons\":\"content_buttons__3uLg6\",\"button\":\"content_button__zTLIh\",\"primary\":\"content_primary__dcKTV\",\"toggles\":\"content_toggles__1KgaA\",\"select\":\"content_select__UaDo3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ThemeSelect_container__3XHSu\",\"label\":\"ThemeSelect_label__2vW_I\",\"select\":\"ThemeSelect_select__1-VpH\",\"arrow\":\"ThemeSelect_arrow__2C4NM\",\"direction\":\"ThemeSelect_direction__3Q9ud\"};","import ResizeObserver from 'resize-observer-polyfill';\nimport {actionTypes} from 'types';\n\ntype titleColoursType =\n  | 'black'\n  | 'red'\n  | 'green'\n  | 'yellow'\n  | 'blue'\n  | 'purple'\n  | 'cyan'\n  | 'white';\n\nexport const returnInitialTheme = (search: string): string | null => {\n  if (search.length > 0) {\n    const params = new URLSearchParams(search);\n    const themeName = params.get('theme');\n    if (themeName != null) {\n      return themeName;\n    }\n  }\n  return null;\n};\n\nexport const screenSizeObserver = (\n  dispatch: React.Dispatch<actionTypes>\n): ResizeObserver => {\n  return new ResizeObserver((entries: ResizeObserverEntry[]) => {\n    const {width} = entries[0].contentRect;\n    if (width >= 1024) {\n      dispatch({type: 'SIZE', isSmallScreenSize: false});\n    } else if (width < 1024) {\n      dispatch({type: 'SIZE', isSmallScreenSize: true});\n    }\n  });\n};\n\nconst stopSelectDetection = (\n  e: KeyboardEvent,\n  themeselectRef: React.MutableRefObject<null | HTMLSelectElement>\n): void => {\n  if (\n    themeselectRef.current != null &&\n    document.activeElement === themeselectRef.current\n  ) {\n    // if the DOM element is being focused, hitting D will\n    // select the first <option> starting with D\n    e.preventDefault();\n    themeselectRef.current.blur();\n  }\n};\n\nexport const shortcuts = (\n  dispatch: React.Dispatch<actionTypes>,\n  themeselectRef: React.MutableRefObject<null | HTMLSelectElement>\n) => (e: KeyboardEvent) => {\n  if (e.code === 'KeyA') {\n    stopSelectDetection(e, themeselectRef);\n    dispatch({\n      type: 'PREV',\n    });\n  }\n  if (e.code === 'KeyD') {\n    stopSelectDetection(e, themeselectRef);\n    dispatch({\n      type: 'NEXT',\n    });\n  }\n};\n\nexport const sampleColours = (theme: themeType | undefined): string[] => {\n  if (theme) {\n    return [\n      theme.red,\n      theme.green,\n      theme.yellow,\n      theme.blue,\n      theme.purple,\n      theme.cyan,\n    ]\n      .sort(() => Math.random() - 0.5)\n      .slice(3);\n  }\n  return [];\n};\n","import {shadeType} from 'types';\n\nconst root = document.documentElement;\n\ntype cssvarType = {\n  '--btn__bg-img': string;\n  '--btn__bg-border': string;\n  '--btn__colour': string;\n  '--btn__bg-img--hover': string;\n  '--btn__bg-color': string;\n  '--btn__border-colour__active': string;\n  '--btn__insert': string;\n  '--toolbar__color': string;\n  '--toolbar__background': string;\n  '--btn-primary__bg-img': string;\n  '--btn-primary__bg-img---hover': string;\n  '--btn-primary__colour': string;\n  '--link-colour': string;\n  '--link-colour--visited': string;\n  '--overlay-background': string;\n  '--console-tab-background': string;\n};\n\nconst cssvarDark: cssvarType = {\n  '--btn__bg-img': 'linear-gradient(-180deg, #535659 0%, #424549 90%)',\n  '--btn__bg-border': '1px solid rgba(200, 200, 200, 0.15)',\n  '--btn__colour': '#d6d8da',\n  '--btn__bg-img--hover': 'linear-gradient(-180deg, #535659, #535659 90%)',\n  '--btn__bg-color': '#404040',\n  '--btn__border-colour__active': 'rgba(200, 200, 200, 0.3)',\n  '--btn__insert': 'inset 0 0.15em 0.3em rgba(20, 22, 23, 0.15)',\n  '--btn-primary__bg-img': 'linear-gradient(-180deg,#2fcb53,#269f42 90%)',\n  '--btn-primary__colour': '#d6d8da',\n  '--btn-primary__bg-img---hover': 'linear-gradient(180deg, #484 5%, #171 90%)',\n  '--toolbar__color': '#ededed',\n  '--toolbar__background': '#202020',\n  '--link-colour': '#5bb3f4',\n  '--link-colour--visited': '#a292ef',\n  '--overlay-background': 'rgba(7, 7, 7, 0.54)',\n  '--console-tab-background': '#333',\n};\n\nconst cssvarLight: cssvarType = {\n  '--btn__bg-img': 'linear-gradient(-180deg, #fafbfc, #eff3f6 90%)',\n  '--btn__bg-border': '1px solid rgba(27, 31, 35, .35)',\n  '--btn__colour': '#24292e',\n  '--btn__bg-img--hover': 'linear-gradient(-180deg, #f0f3f6, #e6ebf1 90%)',\n  '--btn__bg-color': '#e9ecef',\n  '--btn__border-colour__active': 'rgba(27, 31, 35, .3)',\n  '--btn__insert': 'inset 0 .15em .3em rgba(27, 31, 35, .15)',\n  '--btn-primary__bg-img': 'linear-gradient(-180deg,#2fcb53,#269f42 90%)',\n  '--btn-primary__bg-img---hover': 'linear-gradient(180deg, #373 0%, #060 90%)',\n  '--btn-primary__colour': '#d6d8da',\n  '--toolbar__color': '#282c34',\n  '--toolbar__background': '#e1e4e8',\n  '--link-colour': '#224fd4',\n  '--link-colour--visited': '#9e04bf',\n  '--overlay-background': 'rgba(230, 230, 230, 0.48)',\n  '--console-tab-background': '#ccc',\n};\n\nconst setcolours = (type: shadeType): void => {\n  Object.entries(type === 'LIGHT' ? cssvarLight : cssvarDark).forEach(\n    ([key, val]) => {\n      root.style.setProperty(key, val);\n    }\n  );\n};\n\nexport default setcolours;\n","import immer from 'immer';\nimport contrast from 'get-contrast';\n\nimport setcolours from 'utils/setcolours';\n\nimport {\n  themeType,\n  shadeType,\n  themeShadeObjectType,\n  actionTypes,\n  previewType,\n} from 'types';\n\nexport type stateType = {\n  themes: themeType[];\n  filteredThemes: themeType[];\n  activeTheme: string;\n  isSmallScreenSize: boolean;\n  themeShade: shadeType;\n  backgroundColour: string;\n  previewType: previewType;\n  message: {\n    title: string;\n    isActive: boolean;\n    message: string;\n  };\n};\n\nconst titleColours: titleColoursType[] = [\n  'black',\n  'red',\n  'green',\n  'yellow',\n  'blue',\n  'purple',\n  'cyan',\n  'white',\n];\n\nexport const getRandomColour = (theme: themeType | undefined): string => {\n  if (theme == null) {\n    return '';\n  }\n  const randomisedColours = titleColours.sort(() => Math.random() - 0.5);\n  const accessibleColour = randomisedColours.find(\n    (titleColour: titleColoursType) =>\n      contrast.ratio(theme[titleColour], theme.background) > 4.5\n  );\n  if (accessibleColour != null) {\n    return theme[accessibleColour];\n  }\n  return theme[titleColours[0]];\n};\n\nexport const THEME_COLOUR: themeShadeObjectType = {\n  LIGHT: 'LIGHT',\n  DARK: 'DARK',\n  ANY: 'ANY',\n};\n\nexport const initialState: stateType = {\n  themes: [],\n  filteredThemes: [],\n  activeTheme: '',\n  isSmallScreenSize: window.innerWidth < 768,\n  themeShade: THEME_COLOUR.DARK,\n  backgroundColour: '#090300',\n  previewType: 'console',\n  message: {\n    isActive: false,\n    title: 'Title',\n    message: 'A message to be written here for me',\n  },\n};\n\nexport const homeReducer = (\n  state: stateType,\n  action: actionTypes\n): stateType => {\n  return immer(state, (draftState: stateType) => {\n    switch (action.type) {\n      case 'LOAD':\n        draftState.themes = action.themes;\n        if (action.initialTheme != null) {\n          const foundTheme = action.themes.find(\n            (theme: themeType) => theme.name === action.initialTheme\n          );\n          if (foundTheme != null) {\n            draftState.filteredThemes = action.themes.filter(\n              (theme: themeType) => theme.meta.isDark === foundTheme.meta.isDark\n            );\n            draftState.activeTheme = foundTheme.name;\n            draftState.themeShade = foundTheme.meta.isDark ? 'DARK' : 'LIGHT';\n            draftState.backgroundColour = foundTheme.background;\n          }\n        } else {\n          // default to DARK, themeShade is already set\n          draftState.filteredThemes = action.themes.filter(\n            (theme: themeType) => theme.meta.isDark\n          );\n          draftState.activeTheme = draftState.filteredThemes[0].name;\n        }\n        setcolours(draftState.themeShade);\n        break;\n      case 'SET':\n        {\n          draftState.activeTheme = action.theme;\n          // eslint-disable-next-line no-case-declarations\n          const theme = state.themes.find(\n            (theme) => theme.name === action.theme\n          );\n          if (theme) {\n            draftState.backgroundColour = theme.background;\n          }\n        }\n        break;\n      case 'PREV': {\n        const currentIndex = state.filteredThemes.findIndex(\n          (theme) => theme.name === state.activeTheme\n        );\n        let theme;\n        if (currentIndex === 0) {\n          // get last item\n          theme = state.filteredThemes[state.filteredThemes.length - 1];\n        } else {\n          theme = state.filteredThemes[currentIndex - 1];\n        }\n        draftState.activeTheme = theme.name;\n        draftState.backgroundColour = theme.background;\n        break;\n      }\n      case 'NEXT':\n        {\n          let theme;\n          const currentIndex = state.filteredThemes.findIndex(\n            (theme) => theme.name === state.activeTheme\n          );\n          if (currentIndex === state.filteredThemes.length - 1) {\n            // get last item\n            theme = state.filteredThemes[0];\n          } else {\n            theme = state.filteredThemes[currentIndex + 1];\n          }\n          draftState.activeTheme = theme.name;\n          draftState.backgroundColour = theme.background;\n        }\n        break;\n      case 'SIZE':\n        draftState.isSmallScreenSize = action.isSmallScreenSize;\n        break;\n      case 'SHADE':\n        draftState.themeShade = action.payload;\n        if (draftState.themeShade === THEME_COLOUR.DARK) {\n          draftState.filteredThemes = state.themes.filter(\n            (theme) => theme.meta.isDark\n          );\n        }\n        if (draftState.themeShade === THEME_COLOUR.LIGHT) {\n          draftState.filteredThemes = state.themes.filter(\n            (theme) => !theme.meta.isDark\n          );\n        }\n        setcolours(draftState.themeShade);\n        draftState.activeTheme = draftState.filteredThemes[0].name;\n        // eslint-disable-next-line no-case-declarations\n        const theme = state.themes.find(\n          (theme) => theme.name === draftState.filteredThemes[0].name\n        );\n        if (theme) {\n          draftState.backgroundColour = theme.background;\n        }\n        break;\n      case 'PREVIEW':\n        draftState.previewType = action.payload;\n        break;\n      case 'MORE':\n        draftState.isMoreOpen = !state.isMoreOpen;\n        break;\n      case 'show':\n        draftState.message.title = action.title;\n        draftState.message.message = action.message;\n        draftState.message.isActive = true;\n        break;\n      case 'hide':\n        draftState.message.isActive = false;\n        break;\n      default:\n        break;\n    }\n  });\n};\n","import React from 'react';\n\ntype IconProps = {\n  colour?: string;\n  backgroundColour?: string;\n  size?: string;\n  onClick?: () => void;\n  className?: string;\n  direction?: 'up' | 'down' | 'left' | 'right';\n};\n\nexport const Share = (props: IconProps): JSX.Element => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    height={props.size || '18px'}\n    width={props.size || '18px'}\n    viewBox=\"0 0 24 24\"\n    aria-labelledby=\"share\"\n    onClick={props.onClick}\n    className={props.className}\n    style={{\n      stroke: props.colour,\n      backgroundColor: props.backgroundColour,\n      transform: 'scaleX(-1)',\n    }}\n  >\n    <title id=\"share\">Share theme</title>\n    <path\n      d=\"M10 9V5l-7 7 7 7v-4.1c5 0 8.5 1.6 11 5.1-1-5-4-10-11-11z\"\n      fill={props.colour}\n    />\n  </svg>\n);\n\nexport const Copy = (props: IconProps): JSX.Element => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    height={props.size || '18px'}\n    width={props.size || '18px'}\n    viewBox=\"0 0 24 24\"\n    aria-labelledby=\"copy\"\n    onClick={props.onClick}\n    className={props.className}\n    style={{\n      stroke: props.colour,\n      backgroundColor: props.backgroundColour,\n    }}\n  >\n    <title id=\"copy\">Copy theme</title>\n    <path\n      fill={props.colour}\n      d=\"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm-1 4l6 6v10c0 1.1-.9 2-2 2H7.99C6.89 23 6 22.1 6 21l.01-14c0-1.1.89-2 1.99-2h7zm-1 7h5.5L14 6.5V12z\"\n    />\n  </svg>\n);\n\nexport const Download = (props: IconProps): JSX.Element => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    height={props.size || '24px'}\n    width={props.size || '24px'}\n    viewBox=\"0 0 24 24\"\n    aria-labelledby=\"download\"\n    onClick={props.onClick}\n    className={props.className}\n    style={{\n      stroke: props.colour,\n    }}\n  >\n    <title id=\"download\">Download all the themes</title>\n    <path d=\"M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z\" fill={props.colour} />\n  </svg>\n);\n\nexport const Light = (props: IconProps): JSX.Element => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    height={props.size || '24px'}\n    width={props.size || '24px'}\n    viewBox=\"0 0 24 24\"\n    aria-labelledby=\"light-themes\"\n    onClick={props.onClick}\n    className={props.className}\n    style={{\n      stroke: props.colour,\n      outlineColor: props.colour,\n    }}\n  >\n    <title id=\"light-themes\">Select light themes</title>\n    <path\n      d=\"M20 15.31L23.31 12 20 8.69V4h-4.69L12 .69 8.69 4H4v4.69L.69 12 4 15.31V20h4.69L12 23.31 15.31 20H20v-4.69zM12 18c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6z\"\n      fill={props.colour}\n    />\n  </svg>\n);\n\nexport const Dark = (props: IconProps): JSX.Element => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    height={props.size || '24px'}\n    width={props.size || '24px'}\n    viewBox=\"0 0 24 24\"\n    aria-labelledby=\"dark-themes\"\n    onClick={props.onClick}\n    className={props.className}\n    style={{\n      stroke: props.colour,\n      outlineColor: props.colour,\n    }}\n  >\n    <title id=\"dark-themes\">Select dark themes</title>\n    <path\n      d=\"M10 2c-1.82 0-3.53.5-5 1.35C7.99 5.08 10 8.3 10 12s-2.01 6.92-5 8.65C6.47 21.5 8.18 22 10 22c5.52 0 10-4.48 10-10S15.52 2 10 2z\"\n      fill={props.colour}\n    />\n  </svg>\n);\n\nexport const Colours = (props: IconProps): JSX.Element => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    height={props.size || '24px'}\n    width={props.size || '24px'}\n    viewBox=\"0 0 24 24\"\n    aria-labelledby=\"colours-preview\"\n    onClick={props.onClick}\n    className={props.className}\n    style={{\n      stroke: props.colour,\n      outlineColor: props.colour,\n    }}\n  >\n    <title id=\"colours-preview\">Select colours test preview</title>\n    <path\n      d=\"M12 3c-4.97 0-9 4.03-9 9s4.03 9 9 9c.83 0 1.5-.67 1.5-1.5 0-.39-.15-.74-.39-1.01-.23-.26-.38-.61-.38-.99 0-.83.67-1.5 1.5-1.5H16c2.76 0 5-2.24 5-5 0-4.42-4.03-8-9-8zm-5.5 9c-.83 0-1.5-.67-1.5-1.5S5.67 9 6.5 9 8 9.67 8 10.5 7.33 12 6.5 12zm3-4C8.67 8 8 7.33 8 6.5S8.67 5 9.5 5s1.5.67 1.5 1.5S10.33 8 9.5 8zm5 0c-.83 0-1.5-.67-1.5-1.5S13.67 5 14.5 5s1.5.67 1.5 1.5S15.33 8 14.5 8zm3 4c-.83 0-1.5-.67-1.5-1.5S16.67 9 17.5 9s1.5.67 1.5 1.5-.67 1.5-1.5 1.5z\"\n      fill={props.colour}\n    />\n  </svg>\n);\n\nexport const Console = (props: IconProps): JSX.Element => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    height={props.size || '24px'}\n    width={props.size || '24px'}\n    viewBox=\"0 0 24 24\"\n    aria-labelledby=\"codeblock-preview\"\n    onClick={props.onClick}\n    className={props.className}\n    style={{\n      stroke: props.colour,\n      outlineColor: props.colour,\n    }}\n  >\n    <title id=\"codeblock-preview\">Select codeblock preview</title>\n    <path\n      d=\"M9.4 16.6L4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4zm5.2 0l4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4z\"\n      fill={props.colour}\n    />\n  </svg>\n);\n\nexport const Github = (props: IconProps): JSX.Element => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    height={props.size || '24px'}\n    width={props.size || '24px'}\n    viewBox=\"0 0 16 16\"\n    aria-labelledby=\"github-icon\"\n    onClick={props.onClick}\n    className={props.className}\n    style={{\n      outlineColor: props.colour,\n    }}\n  >\n    <title id=\"github-icon\">Github repo link</title>\n    <path\n      d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z\"\n      fill={props.colour}\n    />\n  </svg>\n);\n\nexport const Help = (props: IconProps): JSX.Element => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    height={props.size || '24px'}\n    width={props.size || '24px'}\n    viewBox=\"0 0 24 24\"\n    aria-labelledby=\"help-icon\"\n    onClick={props.onClick}\n    className={props.className}\n    style={{\n      outlineColor: props.colour,\n    }}\n  >\n    <title id=\"help-icon\">Show the help section</title>\n    <path\n      d=\"M11 18h2v-2h-2v2zm1-16C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm0-14c-2.21 0-4 1.79-4 4h2c0-1.1.9-2 2-2s2 .9 2 2c0 2-3 1.75-3 5h2c0-2.25 3-2.5 3-5 0-2.21-1.79-4-4-4z\"\n      fill={props.colour}\n    />\n  </svg>\n);\n\nexport const Arrow = (props: IconProps): JSX.Element => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    height={props.size || '24px'}\n    width={props.size || '24px'}\n    viewBox=\"0 0 24 24\"\n    aria-labelledby={props.direction === 'right' ? 'arrow-right' : 'arrow-left'}\n    onClick={props.onClick}\n    className={props.className}\n    style={{\n      outlineColor: props.colour,\n      transform: props.direction === 'right' ? 'scaleX(-1)' : '',\n    }}\n  >\n    {props.direction === 'right' ? (\n      <title id=\"arrow-right\">{'Show next theme'}</title>\n    ) : (\n      <title id=\"arrow-left\">{'Show previous theme'}</title>\n    )}\n    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    <path\n      d=\"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"\n      fill={props.colour}\n    />\n  </svg>\n);\n\nconst iterateColours = (arr: string[], index: number): string => {\n  if (index === 0) {\n    return [...arr, arr[0]].join(';');\n  }\n  return [...arr.slice(index), ...arr.slice(0, index - 1), arr[index]].join(\n    ';'\n  );\n};\n\ntype LogoType = {\n  colours: string[];\n};\n\nexport const Logo = (props: IconProps & LogoType): JSX.Element => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    height={props.size || '24px'}\n    width={props.size || '24px'}\n    viewBox=\"0 0 512 512\"\n    aria-labelledby=\"logo\"\n    onClick={props.onClick}\n    className={props.className}\n    style={{\n      outlineColor: props.colour,\n    }}\n  >\n    <defs>\n      <linearGradient id=\"logo-gradient\" x2=\"0.35\" y2=\"1\">\n        {props.colours.map(\n          (colour: string, i, originalArr): JSX.Element => (\n            <stop\n              key={i}\n              offset={`${Math.floor((i / (originalArr.length - 1)) * 100)}%`}\n              stopColor={colour}\n            >\n              <animate\n                attributeName=\"stop-color\"\n                values={iterateColours(originalArr, i)}\n                dur=\"4s\"\n                repeatCount=\"indefinite\"\n              ></animate>\n            </stop>\n          )\n        )}\n      </linearGradient>\n    </defs>\n    <title id=\"logo\">Logo</title>\n    <path\n      fill=\"url(#logo-gradient)\"\n      d=\"M495.304 61.217H16.696C7.475 61.217 0 68.693 0 77.913v356.174c0 9.22 7.475 16.696 16.696 16.696h478.609c9.22 0 16.696-7.475 16.696-16.696V77.913c-.001-9.22-7.476-16.696-16.697-16.696zm-16.695 356.174H33.391V194.424h445.217v222.967zm0-256.358H33.391V94.609h445.217v66.424z\"\n    />\n    <path\n      fill=\"url(#logo-gradient)\"\n      d=\"M443.568 103.247c-12.275 0-22.261 9.986-22.261 22.261 0 12.275 9.985 22.261 22.261 22.261 12.275 0 22.261-9.986 22.261-22.261 0-12.275-9.986-22.261-22.261-22.261zM382.926 103.247c-12.275 0-22.261 9.986-22.261 22.261 0 12.275 9.986 22.261 22.261 22.261s22.261-9.986 22.261-22.261c0-12.275-9.986-22.261-22.261-22.261zM322.285 103.247c-12.275 0-22.261 9.986-22.261 22.261 0 12.275 9.985 22.261 22.261 22.261 12.275 0 22.261-9.986 22.261-22.261 0-12.275-9.986-22.261-22.261-22.261zM235.45 293.193l-54.653-46.504c-7.022-5.976-17.559-5.128-23.535 1.896-5.976 7.022-5.127 17.559 1.896 23.535l39.709 33.789-39.709 33.789c-7.023 5.976-7.871 16.512-1.896 23.535 5.975 7.022 16.512 7.871 23.535 1.896l54.653-46.504c7.83-6.663 7.83-18.771 0-25.432zM342.022 335.716h-65.954c-9.22 0-16.696 7.475-16.696 16.696s7.475 16.696 16.696 16.696h65.954c9.22 0 16.696-7.475 16.696-16.696s-7.476-16.696-16.696-16.696z\"\n    />\n  </svg>\n);\n","import React, {ReactElement} from 'react';\n\nimport {actionTypes} from 'types';\nimport css from './Toggle.module.css';\n\ntype PropsState = {\n  values: {\n    value: string;\n    label: string;\n    icon: (isChecked: boolean) => ReactElement;\n  }[];\n  currentValue: string;\n  type: string;\n  dispatch: React.Dispatch<actionTypes>;\n};\n\nconst Toggle: React.FC<PropsState> = (props) => (\n  <section className={css.container}>\n    {props.values.map((option) => {\n      const isSelected = option.value === props.currentValue;\n      return (\n        <label\n          key={option.value}\n          className={`${css.label} ${isSelected ? css.active : ''}`}\n          htmlFor={option.value}\n        >\n          <input\n            name={props.type}\n            type=\"radio\"\n            id={option.value}\n            value={option.value}\n            checked={isSelected}\n            onChange={() => {\n              props.dispatch({\n                type: props.type,\n                payload: option.value,\n              });\n            }}\n            className={css.radio}\n          />\n          <div className={css.outline}>\n            {option.icon(isSelected)}\n            {option.label}\n          </div>\n        </label>\n      );\n    })}\n  </section>\n);\n\nexport default Toggle;\n","import React from 'react';\n\nimport Toggle from 'components/Toggle/Toggle';\nimport {Console, Colours, Dark, Light} from 'Icons';\nimport {previewType, actionTypes, themeShadeType} from 'types';\n\n// TODO: shadeValues & previewValues is really ugly\nconst shadeValues = [\n  {\n    value: 'DARK',\n    label: 'Dark',\n    // eslint-disable-next-line react/display-name\n    icon: () => (\n      <Dark\n        size=\"18px\"\n        colour={document.documentElement.style.getPropertyValue(\n          '--toolbar__color'\n        )}\n      />\n    ),\n  },\n  {\n    value: 'LIGHT',\n    label: 'Light',\n    // eslint-disable-next-line react/display-name\n    icon: () => (\n      <Light\n        size=\"18px\"\n        colour={document.documentElement.style.getPropertyValue(\n          '--toolbar__color'\n        )}\n      />\n    ),\n  },\n];\n\nconst previewValues = [\n  {\n    value: 'console',\n    label: 'Terminal',\n    // eslint-disable-next-line react/display-name\n    icon: () => (\n      <Console\n        size=\"18px\"\n        colour={document.documentElement.style.getPropertyValue(\n          '--toolbar__color'\n        )}\n      />\n    ),\n  },\n  {\n    value: 'colour',\n    label: 'Colours',\n    // eslint-disable-next-line react/display-name\n    icon: () => (\n      <Colours\n        size=\"18px\"\n        colour={document.documentElement.style.getPropertyValue(\n          '--toolbar__color'\n        )}\n      />\n    ),\n  },\n];\n\ntype PropsType = {\n  themeShade: themeShadeType;\n  previewType: previewType;\n  dispatch: React.Dispatch<actionTypes>;\n};\n\nconst Toggles = (props: PropsType): JSX.Element => (\n  <>\n    <Toggle\n      currentValue={props.themeShade}\n      dispatch={props.dispatch}\n      type=\"SHADE\"\n      values={shadeValues}\n    />\n    <Toggle\n      currentValue={props.previewType}\n      dispatch={props.dispatch}\n      type=\"PREVIEW\"\n      values={previewValues}\n    />\n  </>\n);\n\nexport default Toggles;\n","import React from 'react';\n\nimport {themeType} from 'types';\nimport css from './ColourTest.module.css';\n\nexport const backgroundKeys: backgroundKeyType[] = [\n  'background',\n  'black',\n  'red',\n  'green',\n  'yellow',\n  'blue',\n  'purple',\n  'cyan',\n  'white',\n  'background',\n];\n\nexport const textKeys: textKeyType[] = [\n  'black',\n  'brightBlack',\n  'red',\n  'brightRed',\n  'green',\n  'brightGreen',\n  'yellow',\n  'brightYellow',\n  'blue',\n  'brightBlue',\n  'purple',\n  'brightPurple',\n  'cyan',\n  'brightCyan',\n  'white',\n  'brightWhite',\n];\n\ntype PropsType = {\n  theme: themeType;\n};\n\nconst ColourTest: React.FC<PropsType> = (props) => {\n  return (\n    <>\n      <section className={css.matrix} data-testid=\"colourtest\">\n        {textKeys.map((textKey, i) =>\n          backgroundKeys.map((backgroundKey, y) => (\n            <div\n              key={i + ' ' + y}\n              className={css.cell}\n              style={{\n                background: props.theme ? props.theme[backgroundKey] : '',\n                color: props.theme ? props.theme[textKey] : '',\n              }}\n            >\n              gYw\n            </div>\n          ))\n        )}\n      </section>\n      {Array.isArray(props.theme.meta.credits) && (\n        <div className={css.credits} data-testid=\"credit\">\n          credit: {props.theme.name} {'- '}\n          {props.theme.meta.credits.map((credit, i) => (\n            <React.Fragment key={i}>\n              {i > 0 && <span>/</span>}\n              <a key={i} href={credit.link}>\n                {credit.name}\n              </a>\n            </React.Fragment>\n          ))}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ColourTest;\n","import {textKeyType} from 'types';\n\nexport type codeblocksType = {\n  name: string;\n  markup: string;\n  defaultColour: textKeyType | 'foreground' | 'background';\n  id: string;\n};\n\nconst codeblocks: codeblocksType[] = [\n  {\n    id: 'cra/compiled',\n    name: 'CRA - compiled',\n    markup: `<green>Compiled successfully!</green>\n\nYou can now view <bold>terminal</bold> in the browser. \n\n  <bold>Local:</bold>           http://localhost:<bold>3000</bold>/themes\n  <bold>On Your Network:</bold> http://192.168.86.37:<bold>3000</bold>/themes \n  \nNote that the development build is not\noptimized. \nTo create a production build, use <cyan>yarn build</cyan>.`,\n    defaultColour: 'foreground',\n  },\n  {\n    id: 'cypress/run',\n    name: 'Cypress - run',\n    markup: `<foreground>Running:</foreground>  <brightBlack>themes.spec.js                            (1 of 1)</brightBlack>\n\n<foreground>Windows Terminal Themes - big screen</foreground>\n<cyan>- should download all themes using download button</cyan>\n<green>√</green> should show dark theme by default <red>(705ms)</red>\n    \n<green>(</green><brightGreen>Results</brightGreen><green>)</green>\n\n┌──────────────────────────────────────────────────────────┐\n│ Tests:        <green>18</green>                                         │\n│ Duration:     <green>10 seconds</green>                                 │\n│ Spec Ran:     <green>themes.spec.js</green>                             │\n└──────────────────────────────────────────────────────────┘\n`,\n    defaultColour: 'brightBlack',\n  },\n  {\n    id: 'jest/failed',\n    name: 'Jest - failed',\n    markup: `<foreground:brightRed> FAIL </foreground:brightRed> src/components/Home/Home.test.js (<white:red>17.523s</white:red>)\n  <red>● should return theme name from search params</red>\n  \n  expect(<red>received</red>).toBe(<green>expected</green>) // Object.is equality\n  \n    Expected: <green>\"synthwave-everything</green><background:brightGreen>error\"</background:brightGreen>\n    Received: <red>\"synthwave-everything\"</red>\n    \n        218 |\n        219 | it(<green>'should return theme name from search params'</green>, () <yellow>=></yellow> {\n      > 220 |   expect(returnInitialTheme(<brightGreen>'?theme=synthwave-everything'</brightGreen>)).toBe(\n            |                                                             ^\n        221 |     <green>'synthwave-everythingerror'</green>\n        222 |   );\n        223 |   expect(returnInitialTheme(<green>'?wrong=synthwave-everything'</green>)).toBe(<cyan>null</cyan>);\n        \n        at Object.toBe (<cyan>src/components/Home/Home.test.js</cyan>:220:61)\n  \n<bold>Test Suites:</bold> <brightRed>1 failed</brightRed>, <brightGreen>1 passed</brightGreen>, 2 total\n<bold>Tests:</bold>       <brightRed>1 failed</brightRed>, <brightYellow>4 skipped</brightYellow>, <brightGreen>2 passed</brightGreen>, 7 total\n<bold>Snapshots:</bold>   0 total\n<bold>Time:</bold>        <brightYellow>22.5s</brightYellow>\nRan all test suites.\n\nWatch Usage: Press w to show more.\n    `,\n    defaultColour: 'white',\n  },\n  {\n    id: 'jest/runnning',\n    name: 'Jest - running',\n    markup: `<brightBlack:brightYellow>  RUNS  </brightBlack:brightYellow> src/components/Home/<bold>Home.test.js</bold>\n<brightBlack:brightYellow>  RUNS  </brightBlack:brightYellow> src/<bold>App.test.tsx</bold>\n    \n<bold>Test Suites:</bold> 0 of 2 total\n<bold>Tests:</bold>       0 total\n<bold>Snapshots:</bold>   0 total\n<bold>Time:</bold>        4s\n\n<background:green>         </background:green><background:foreground>                             </background:foreground>\n\n    `,\n    defaultColour: 'foreground',\n  },\n];\n\nexport default codeblocks;\n","import {validThemeType, themeType, validKeysType} from 'types';\n\nexport const validKeys: validKeysType = [\n  'name',\n  'black',\n  'red',\n  'green',\n  'yellow',\n  'blue',\n  'purple',\n  'cyan',\n  'white',\n  'brightBlack',\n  'brightRed',\n  'brightGreen',\n  'brightYellow',\n  'brightBlue',\n  'brightPurple',\n  'brightCyan',\n  'brightWhite',\n  'background',\n  'foreground',\n  'selectionBackground',\n  'cursorColor',\n];\n\n// this just keeps Typescript happy\nconst initThemeObj = {\n  name: '',\n  black: '',\n  red: '',\n  green: '',\n  yellow: '',\n  blue: '',\n  purple: '',\n  cyan: '',\n  white: '',\n  brightBlack: '',\n  brightRed: '',\n  brightGreen: '',\n  brightYellow: '',\n  brightBlue: '',\n  brightPurple: '',\n  brightCyan: '',\n  brightWhite: '',\n  background: '',\n  foreground: '',\n  selectionBackground: '',\n  cursorColor: '',\n};\n\nexport const parseValidKeys = (theme: themeType): validThemeType => {\n  return validKeys.reduce(\n    (acc, key) => ({\n      ...acc,\n      ...{\n        [key]: theme[key],\n      },\n    }),\n    initThemeObj\n  );\n};\n","import React, {useState} from 'react';\n\nimport css from './ConsoleTest.module.css';\nimport {themeType} from 'types';\nimport codeblocks, {codeblocksType} from './codeblocks';\nimport {parseSyntax} from './methods';\n\ntype PropsType = {\n  theme: themeType;\n};\n\nconst defaultCodeblock: codeblocksType = {\n  defaultColour: 'foreground',\n  markup: '',\n  id: 'default',\n  name: 'default',\n};\n\nconst ConsoleTest: React.FC<PropsType> = (props) => {\n  const [tab, setTab] = useState(codeblocks[0].id);\n  const activeCodeblock =\n    codeblocks.find((codeblock) => codeblock.id === tab) ?? defaultCodeblock;\n  return (\n    <section className={css.container} data-testid=\"consoletest\">\n      <div\n        className={`${css.terminal}  ${\n          !props.theme.meta.isDark ? css.light : ''\n        }`}\n      >\n        <div className={css.titlebar}>\n          <div className={css.tabs}>\n            {codeblocks.map((codeblock) => (\n              <div\n                key={codeblock.id}\n                className={`${css.tab} ${\n                  tab === codeblock.id ? css.active : ''\n                }`}\n              >\n                <input\n                  className={css.radio}\n                  id={codeblock.id}\n                  name=\"tab\"\n                  type=\"radio\"\n                  value={codeblock.id}\n                  checked={codeblock.id === activeCodeblock.id}\n                  onChange={() => {\n                    setTab(codeblock.id);\n                  }}\n                />\n                <label htmlFor={codeblock.id}>\n                  <span>{codeblock.name}</span>\n                </label>\n              </div>\n            ))}\n          </div>\n        </div>\n        <code\n          data-testid=\"markup\"\n          className={css.code}\n          style={{\n            color: props.theme[(props.theme, activeCodeblock.defaultColour)],\n          }}\n        >\n          {parseSyntax(props.theme, activeCodeblock.markup)}\n        </code>\n        {Array.isArray(props.theme.meta.credits) && (\n          <div className={css.footer} data-testid=\"credit\">\n            credit: {props.theme.name} {'- '}\n            {props.theme.meta.credits.map((credit, i) => (\n              <React.Fragment key={i}>\n                {i > 0 && <span>/</span>}\n                <a key={i} href={credit.link}>\n                  {credit.name}\n                </a>\n              </React.Fragment>\n            ))}\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default ConsoleTest;\n","import React from 'react';\n\nimport {validKeys} from 'components/Home/consoleMethods';\nimport {themeType, textKeyType} from 'types';\n\nexport const parseSyntax = (\n  theme: themeType,\n  markup: string\n): (string | JSX.Element)[] => {\n  const throwErrors =\n    process.env.NODE_ENV === 'development' || process.env.NODE_ENV === 'test';\n  return markup.split(/(<[^/>]+?>[^<]+<[^>]+?>)/g).map((string, i) => {\n    const matches = [...string.matchAll(/<(.+?)>(.+)<\\/(.+)>/g)][0];\n    if (matches != null) {\n      if (throwErrors && matches[1] !== matches[3]) {\n        throw new Error(\n          `Opening tag <${matches[1]}> does not match closing tag </${matches[3]}>`\n        );\n      }\n      const colours = matches[1].split(':');\n      // check bold in case Windows Terminal ever properly adds bold\n      // in the meantime, default to just foreground\n      const foreground =\n        colours[0] === 'bold' ? 'foreground' : (colours[0] as textKeyType);\n      const background =\n        colours.length > 0 ? (colours[1] as textKeyType) : null;\n      if (\n        throwErrors &&\n        (!validKeys.includes(foreground) ||\n          (background && !validKeys.includes(background)))\n      ) {\n        throw new Error(\n          `Using invalid tags: <${matches[1]}>${matches[2]}</${matches[3]}>`\n        );\n      }\n      const contents = matches[2];\n      return (\n        <span\n          key={i}\n          style={{\n            color: theme[foreground],\n            background: background ? theme[background] : undefined,\n          }}\n        >\n          {contents}\n        </span>\n      );\n    }\n    if (throwErrors && string.match(/<(.+?)>(.+)<(.+)>/g)) {\n      throw new Error(\n        `Found invalid tags: ${string}. \\n Are they formatted correctly?`\n      );\n    }\n\n    return string;\n  }, []);\n};\n","/**\n * I made the direction buttons here <div> not <buttons>\n * so they don't get focused, but it's annoying on phones when repeatably clicking\n * the text gets selected\n * so can use tabindex=\"-1\"\n *\n */\nimport React from 'react';\n\nimport {actionTypes} from 'types';\nimport css from './ThemeSelect.module.css';\nimport {Arrow} from 'Icons';\n\ntype PropsType = {\n  themeNames: string[];\n  activeTheme: string;\n  dispatch: React.Dispatch<actionTypes>;\n  themeselectRef: React.MutableRefObject<null | HTMLSelectElement>;\n};\n\nconst ThemeSelect: React.FC<PropsType> = (props) => {\n  return (\n    <div className={css.container}>\n      <button\n        tabIndex={-1}\n        className={css.direction}\n        onClick={() => {\n          props.dispatch({type: 'PREV'});\n        }}\n      >\n        <Arrow\n          className={css.arrow}\n          colour={getComputedStyle(document.documentElement).getPropertyValue(\n            '--btn__colour'\n          )}\n          size=\"18px\"\n        />\n        Prev\n      </button>\n      <label className={css.label} htmlFor=\"theme-select\">\n        <span className=\"visually-hidden \">Select theme</span>\n        <select\n          data-testid=\"theme-list\"\n          ref={props.themeselectRef}\n          id=\"theme-select\"\n          className={css.select}\n          value={props.activeTheme}\n          onChange={(e) => {\n            e.preventDefault();\n            if (e.target) {\n              props.dispatch({type: 'SET', theme: e.target.value});\n            }\n          }}\n        >\n          {props.themeNames.map((themeName) => (\n            <option\n              data-testid=\"theme-option\"\n              value={themeName}\n              key={themeName}\n            >\n              {themeName}\n            </option>\n          ))}\n        </select>\n      </label>\n      <button\n        tabIndex={-1}\n        className={css.direction}\n        onClick={() => {\n          props.dispatch({type: 'NEXT'});\n        }}\n      >\n        Next\n        <Arrow\n          className={css.arrow}\n          direction=\"right\"\n          size=\"18px\"\n          colour={getComputedStyle(document.documentElement).getPropertyValue(\n            '--btn__colour'\n          )}\n        />\n      </button>\n    </div>\n  );\n};\n\nexport default ThemeSelect;\n","import React from 'react';\nimport css from './Toast.module.css';\n\ntype ToastType = {\n  title: string;\n  isActive: boolean;\n  message: string;\n  background: string;\n};\n\nconst Toast = (props: ToastType): JSX.Element => (\n  <section className={`${css.container} ${props.isActive ? css.active : ''}`}>\n    <div className={css.title}>{props.message}</div>\n  </section>\n);\n\nexport default Toast;\n","import React, {useEffect, useReducer, useRef, useMemo} from 'react';\nimport * as clipboard from 'clipboard-polyfill';\n\nimport {\n  screenSizeObserver,\n  returnInitialTheme,\n  shortcuts,\n  sampleColours,\n} from './homeMethods';\nimport {homeReducer, initialState} from 'components/Home/homeState';\nimport {themeType} from 'types';\nimport {Copy, Logo, Share} from 'Icons';\nimport Toggles from 'components/Toggle/Toggles';\nimport ColourTest from 'components/ColourTest/ColourTest';\nimport ConsoleTest from 'components/ConsoleTest/ConsoleTest';\nimport ThemeSelect from 'components/ThemeSelect/ThemeSelect';\nimport Toast from 'components/Toast/Toast';\nimport {parseValidKeys} from './consoleMethods';\n\nimport css from './Home.module.css';\nimport toolbar from './toolbar.module.css';\nimport content from './content.module.css';\n\ntype themeprops = {\n  themes: themeType[];\n};\n\nconst toastmessages = {\n  share: (themename: string) => `${themename} link added your clipboard`,\n  copy: (themename: string) => `${themename} theme added to your clipboard`,\n};\n\nconst Home: React.FC<themeprops> = (props) => {\n  const themeselectRef = useRef(null);\n  const [state, dispatch] = useReducer(homeReducer, {\n    ...initialState,\n    ...{isSmallScreenSize: window.innerWidth < 1024},\n  });\n  useEffect(() => {\n    dispatch({\n      type: 'LOAD',\n      themes: props.themes,\n      initialTheme: returnInitialTheme(window.location.search),\n    });\n    const resizer = screenSizeObserver(dispatch);\n    resizer.observe(document.body);\n    return () => {\n      resizer.unobserve(document.body);\n    };\n  }, [props.themes]);\n  useEffect(() => {\n    const shortcutFns = shortcuts(dispatch, themeselectRef);\n    document.addEventListener('keypress', shortcutFns);\n    return () => {\n      document.removeEventListener('keypress', shortcutFns);\n    };\n  }, []);\n  const theme = state.themes.find((theme) => theme.name === state.activeTheme);\n  const themeNames = state.filteredThemes.map((theme) => theme.name);\n\n  const stringyTheme = theme != null ? JSON.stringify(theme) : null;\n  const colours = useMemo(() => {\n    // idk, this seems dumb but Dan says it's fine\n    // https://twitter.com/dan_abramov/status/1104414469629898754?lang=en\n    return sampleColours(\n      stringyTheme != null ? JSON.parse(stringyTheme) : null\n    );\n  }, [stringyTheme]);\n  const handleCopy = (): void => {\n    if (!state.message.isActive && theme) {\n      dispatch({\n        type: 'show',\n        title: 'Copied!',\n        message: toastmessages.copy(theme.name),\n      });\n      clipboard.writeText(JSON.stringify(parseValidKeys(theme), null, 2));\n      setTimeout(() => {\n        dispatch({type: 'hide'});\n      }, 1000);\n    }\n  };\n  const handleShare = (): void => {\n    if (!state.message.isActive && theme) {\n      dispatch({\n        type: 'show',\n        title: 'Shared!',\n        message: toastmessages.share(theme.name),\n      });\n      clipboard.writeText(\n        `${window.location.origin}${\n          window.location.pathname\n        }?theme=${encodeURIComponent(theme.name)}`\n      );\n      setTimeout(() => {\n        dispatch({type: 'hide'});\n      }, 1000);\n    }\n  };\n  return (\n    <section\n      className={css.container}\n      style={{background: state.backgroundColour}}\n    >\n      <section className={toolbar.container}>\n        <a href=\"/\" className={toolbar.title}>\n          <Logo size=\"48px\" colours={colours} className={toolbar.logo} />\n          <h1>Windows Terminal Themes</h1>\n        </a>\n        {!state.isSmallScreenSize && (\n          <div className={toolbar.toggles}>\n            <Toggles\n              themeShade={state.themeShade}\n              previewType={state.previewType}\n              dispatch={dispatch}\n            />\n          </div>\n        )}\n      </section>\n\n      <section className={css.content}>\n        <section className={content.container}>\n          {state.isSmallScreenSize && (\n            <div className={content.toggles}>\n              <Toggles\n                themeShade={state.themeShade}\n                previewType={state.previewType}\n                dispatch={dispatch}\n              />\n            </div>\n          )}\n          {theme != null &&\n            (state.previewType === 'colour' ? (\n              <ColourTest theme={theme} />\n            ) : (\n              <ConsoleTest theme={theme} />\n            ))}\n          <ThemeSelect\n            themeNames={themeNames}\n            dispatch={dispatch}\n            activeTheme={state.activeTheme}\n            themeselectRef={themeselectRef}\n          />\n          <div className={content.buttons}>\n            <button\n              data-testid=\"copyButton\"\n              className={`${content.button} ${content.primary}`}\n              onClick={handleCopy}\n            >\n              <Copy className={content.icon} colour=\"#ededed\" />\n              Get theme\n            </button>\n            <button\n              data-testid=\"shareButton\"\n              className={content.button}\n              onClick={handleShare}\n            >\n              <Share\n                className={content.icon}\n                colour={getComputedStyle(\n                  document.documentElement\n                ).getPropertyValue('--btn__colour')}\n              />\n              Share theme\n            </button>\n          </div>\n          <Toast\n            background={props.backgroundColour}\n            title={state.message.title}\n            isActive={state.message.isActive}\n            message={state.message.message}\n          />\n        </section>\n      </section>\n    </section>\n  );\n};\n\nexport default Home;\n","import React from 'react';\n\nimport {Logo} from 'Icons';\n\nimport css from './Skeleton.module.css';\n\nconst Skeleton = (): JSX.Element => (\n  <section className={css.container}>\n    <h1>\n      <Logo\n        size=\"48px\"\n        colours={['#8adbb4', '#d7af87', '#c79ec4']}\n        className={css.logo}\n      />\n      Windows Terminal Themes\n    </h1>\n    <h4>Loading...</h4>\n  </section>\n);\n\nexport default Skeleton;\n","import React from 'react';\n\nimport css from './More.module.css';\n\ntype MoreSectionProps = {\n  heading: string;\n};\n\nconst MoreSection: React.FC<MoreSectionProps> = (props) => {\n  return (\n    <div className={css.section}>\n      <div className={css.heading}>{props.heading}</div>\n      <hr className={css.hr} />\n      {props.children}\n    </div>\n  );\n};\n\ntype MoreContentProps = {\n  downloadAllThemes: () => void;\n};\n\nconst MoreContent = (props: MoreContentProps): JSX.Element => (\n  <section data-testid=\"morecontent\" className={css.container} id=\"more\">\n    <MoreSection heading=\"Download\">\n      <p>\n        Get all the themes as one big json file, warning: not as useful as it\n        sounds{' '}\n        <span role=\"img\" aria-label=\"person shrugging\">\n          🤷‍♀️\n        </span>\n      </p>\n      <button onClick={props.downloadAllThemes}>\n        Download .json of themes\n      </button>\n    </MoreSection>\n    <MoreSection heading=\"Help\">\n      <p>\n        For how to use the themes see the{' '}\n        <a href=\"https://github.com/atomcorp/themes#how-to-use-the-themes\">\n          help section of this repo\n        </a>\n        .\n      </p>\n      <p>\n        See also the{' '}\n        <a href=\"https://github.com/microsoft/terminal/blob/master/doc/user-docs/UsingJsonSettings.md\">\n          Windows Terminal settings official docs\n        </a>\n        .\n      </p>\n    </MoreSection>\n    <MoreSection heading=\"Credit\">\n      <p>\n        Most themes come from{' '}\n        <a href=\"https://github.com/mbadolato/iTerm2-Color-Schemes\">\n          iTerm2 Color Schemes\n        </a>\n        , so huge thanks to them!\n      </p>\n      <p>\n        Also big thanks to those that have contributed themes directly,{' '}\n        <a href=\"https://github.com/atomcorp/themes#credits\">\n          credits on GitHub\n        </a>\n        .\n      </p>\n    </MoreSection>\n    <MoreSection heading=\"Contribute\">\n      <p>\n        New themes are very welcome! To add a new theme to this site either:{' '}\n      </p>\n      <ul>\n        <li>\n          add it through{' '}\n          <a href=\"https://github.com/mbadolato/iTerm2-Color-Schemes#contribute\">\n            iTerm2 Color Schemes\n          </a>{' '}\n          (preferable, it will automatically be used here)\n        </li>\n        <li>\n          or through a pull request to this site&apos;s repo{' '}\n          <a href=\"https://github.com/atomcorp/themes#contribute-a-theme\">\n            Windows Terminal Themes\n          </a>\n        </li>\n      </ul>\n    </MoreSection>\n    <MoreSection heading=\"GitHub\">\n      <p>\n        Star, Fork or file an issue at the{' '}\n        <a href=\"https://github.com/atomcorp/themes\">Windows Terminal Themes</a>{' '}\n        repository on GitHub.\n      </p>\n    </MoreSection>\n    <MoreSection heading=\"Tips\">\n      <p>\n        You can use keyboard shortcuts, <span className={css.key}>A</span> for\n        previous theme, <span className={css.key}>D</span> for next theme.\n      </p>\n      <p>\n        The site should be fully accessible too,{' '}\n        <a href=\"https://github.com/atomcorp/themes/issues\">\n          please open an issue if you notice a problem\n        </a>\n        .\n      </p>\n    </MoreSection>\n  </section>\n);\n\nexport default MoreContent;\n","import React, {useEffect, useState} from 'react';\nimport {saveAs} from 'file-saver';\n\nimport Home from 'components/Home/Home';\nimport {themeType} from 'types';\nimport Skeleton from 'components/Skeleton/Skeleton';\nimport MoreContent from 'components/More/MoreContent';\n\n/**\n * in development https://github.com/atomcorp/terminal-api needs to be installed and running\n * for this to work\n * package.json has a proxy which redirects stuff it can't find to http://localhost:3001\n * then, apiBase can either be '' or http://localhost:3000 (ie the react apps domain)\n */\nconst apiBase =\n  process.env.NODE_ENV === 'development' ? '' : 'https://www.atomcorp.dev';\n\nconst App: React.FC = () => {\n  const [themes, setThemes] = useState<themeType[]>([]);\n  useEffect(() => {\n    const getThemes = async (): Promise<void> => {\n      try {\n        const res = await fetch(`${apiBase}/api/v1/themes`);\n        const themes = await res.json();\n        setThemes(themes);\n      } catch (error) {\n        // use dynamic importing / code splitting\n        import('backupthemes.json').then((backupthemes) => {\n          setThemes(backupthemes.default);\n        });\n      }\n    };\n    getThemes();\n  }, []);\n  const downloadAllThemes = (): void => {\n    const themeBlob = new Blob(\n      [\n        JSON.stringify(\n          themes.map((theme) => {\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            const {meta, ...rest} = theme;\n            return rest;\n          }),\n          null,\n          2\n        ),\n      ],\n      {\n        type: 'application/json',\n      }\n    );\n    saveAs(themeBlob, 'windows-terminal-themes.json', {autoBom: true});\n  };\n  if (themes.length < 1) {\n    return <Skeleton />;\n  }\n  return (\n    <>\n      <Home themes={themes} />\n      <MoreContent downloadAllThemes={downloadAllThemes} />\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config): void {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as {env: {[key: string]: string}}).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          // eslint-disable-next-line no-console\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config): void {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              // eslint-disable-next-line no-console\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              // eslint-disable-next-line no-console\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      // eslint-disable-next-line no-console\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config): void {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      // eslint-disable-next-line no-console\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister(): void {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"More_container__3WQQo\",\"hr\":\"More_hr__12bOj\",\"section\":\"More_section__2p6je\",\"heading\":\"More_heading__3eVBM\",\"key\":\"More_key__gXvA6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Toggle_container__352LE\",\"label\":\"Toggle_label__3W81D\",\"active\":\"Toggle_active__3kMzo\",\"radio\":\"Toggle_radio__RWHXG\",\"outline\":\"Toggle_outline__3zO8j\"};"],"sourceRoot":""}